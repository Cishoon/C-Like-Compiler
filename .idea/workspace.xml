<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="CMakePresetLoader">{
  &quot;useNewFormat&quot;: true
}</component>
  <component name="CMakeReloadState">
    <option name="reloaded" value="true" />
  </component>
  <component name="CMakeRunConfigurationManager">
    <generated>
      <config projectName="C_Like_Compiler" targetName="Tests" />
      <config projectName="C_Like_Compiler" targetName="gmock" />
      <config projectName="C_Like_Compiler" targetName="gtest" />
      <config projectName="C_Like_Compiler" targetName="C_Like_Compiler" />
      <config projectName="C_Like_Compiler" targetName="gmock_main" />
      <config projectName="C_Like_Compiler" targetName="gtest_main" />
    </generated>
  </component>
  <component name="CMakeSettings">
    <configurations>
      <configuration PROFILE_NAME="Debug" ENABLED="true" CONFIG_NAME="Debug" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="6611af5e-8e4a-4fac-8698-9ea674dbbf3a" name="Changes" comment="first commit">
      <change afterPath="$PROJECT_DIR$/input/input_6个形参.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/input/input_demo.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/input/input_复杂表达式.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/input/input_斐波那契.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/input/input_累加.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/input/input_错误.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/input/input_阶乘.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/input/intput_倒数.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/include/src/Compiler/Compiler.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/include/src/Compiler/Compiler.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/include/src/Lexer/Lexer.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/include/src/Lexer/Lexer.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/include/src/MipsInstructionGenerator/CodeList.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/include/src/MipsInstructionGenerator/CodeList.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/include/src/MipsInstructionGenerator/MipsInstructionGenerator.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/include/src/MipsInstructionGenerator/MipsInstructionGenerator.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/include/src/MipsInstructionGenerator/RegisterManager.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/include/src/MipsInstructionGenerator/RegisterManager.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/include/src/MipsInstructionGenerator/StackManager.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/include/src/MipsInstructionGenerator/StackManager.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/include/src/Semantic/SemanticAnalyzer.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/include/src/Semantic/SemanticAnalyzer.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/input/input.c" beforeDir="false" afterPath="$PROJECT_DIR$/input/input.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/input/input_for.txt" beforeDir="false" afterPath="$PROJECT_DIR$/input/input_for.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Compiler/Compiler.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Compiler/Compiler.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Lexer/Lexer.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Lexer/Lexer.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/MipsInstructionGenerator/MipsInstructionGenerator.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/MipsInstructionGenerator/MipsInstructionGenerator.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/MipsInstructionGenerator/StackManager.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/MipsInstructionGenerator/StackManager.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Semantic/SemanticAnalyzer.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Semantic/SemanticAnalyzer.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/main.cpp" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:Debug" />
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file:///Library/Developer/CommandLineTools/SDKs/MacOSX13.3.sdk/usr/include/c++/v1/iosfwd" root0="SKIP_INSPECTION" />
    <setting file="file:///Library/Developer/CommandLineTools/SDKs/MacOSX13.3.sdk/usr/include/c++/v1/stdexcept" root0="SKIP_INSPECTION" />
    <setting file="file://$PROJECT_DIR$/src/Semantic/SemanticAnalyzer.cpp" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectApplicationVersion">
    <option name="ide" value="CLion" />
    <option name="majorVersion" value="2023" />
    <option name="minorVersion" value="3.3" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 7
}</component>
  <component name="ProjectId" id="2btFozUjK5kCZXZTAAIIE1i2igy" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
    &quot;CMake Application.C_Like_Compiler.executor&quot;: &quot;Run&quot;,
    &quot;CMake Application.Tests.executor&quot;: &quot;Run&quot;,
    &quot;CMake Debug.C_Like_Compiler.executor&quot;: &quot;Debug&quot;,
    &quot;CTest Application.All CTest.executor&quot;: &quot;Run&quot;,
    &quot;Google Test.RegisterManager.TestRegisterManager.executor&quot;: &quot;Run&quot;,
    &quot;Google Test.RegisterManagerTest.TestMethod.executor&quot;: &quot;Run&quot;,
    &quot;Google Test.RegisterManagerTest.TestMethod2.executor&quot;: &quot;Run&quot;,
    &quot;Google Test.TestForAdd.executor&quot;: &quot;Run&quot;,
    &quot;Google Test.TestForAdd.test3.executor&quot;: &quot;Run&quot;,
    &quot;Google Test.Tests.executor&quot;: &quot;Run&quot;,
    &quot;Python.main.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.readMode.enableVisualFormatting&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;true&quot;,
    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,
    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,
    &quot;ctest.advertisement.all.test.configuration.is.created&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/cishoon/WorkPlace/C-Like-Compiler/input&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settingsdialog.IDE.editor.colors.Color Scheme Font&quot;,
    &quot;structure.view.defaults.are.configured&quot;: &quot;true&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/input" />
      <recent name="$PROJECT_DIR$/config/input" />
      <recent name="$PROJECT_DIR$/config" />
      <recent name="$PROJECT_DIR$" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/MipsInstructionGenerator" />
      <recent name="$PROJECT_DIR$/src/Compiler" />
      <recent name="$PROJECT_DIR$/include/src/Compiler" />
      <recent name="$PROJECT_DIR$/include/src/Semantic" />
      <recent name="$PROJECT_DIR$/include/src/MipsInstructionGenerator" />
    </key>
  </component>
  <component name="RunManager" selected="CMake Application.C_Like_Compiler">
    <configuration name="RegisterManagerTest.TestMethod" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" temporary="true" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="C_Like_Compiler" TARGET_NAME="Tests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="C_Like_Compiler" RUN_TARGET_NAME="Tests" TEST_CLASS="RegisterManagerTest" TEST_METHOD="TestMethod" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RegisterManagerTest.TestMethod2" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" temporary="true" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="C_Like_Compiler" TARGET_NAME="Tests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="C_Like_Compiler" RUN_TARGET_NAME="Tests" TEST_CLASS="RegisterManagerTest" TEST_METHOD="TestMethod2" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RegisterManager.TestRegisterManager" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" temporary="true" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="C_Like_Compiler" TARGET_NAME="Tests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="C_Like_Compiler" RUN_TARGET_NAME="Tests" TEST_CLASS="RegisterManager" TEST_METHOD="TestRegisterManager" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="TestForAdd.test3" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" temporary="true" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="C_Like_Compiler" TARGET_NAME="Tests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="C_Like_Compiler" RUN_TARGET_NAME="Tests" TEST_CLASS="TestForAdd" TEST_METHOD="test3" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Tests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="C_Like_Compiler" TARGET_NAME="Tests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="C_Like_Compiler" RUN_TARGET_NAME="Tests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="C_Like_Compiler" type="CMakeRunConfiguration" factoryName="Application" PROGRAM_PARAMS=" ../input/input.c ./output.asm -s" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="C_Like_Compiler" TARGET_NAME="C_Like_Compiler" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="C_Like_Compiler" RUN_TARGET_NAME="C_Like_Compiler">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Tests" type="CMakeRunConfiguration" factoryName="Application" temporary="true" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="C_Like_Compiler" TARGET_NAME="Tests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="C_Like_Compiler" RUN_TARGET_NAME="Tests">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gmock" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="C_Like_Compiler" TARGET_NAME="gmock" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gmock_main" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="C_Like_Compiler" TARGET_NAME="gmock_main" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gtest" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="C_Like_Compiler" TARGET_NAME="gtest" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gtest_main" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="C_Like_Compiler" TARGET_NAME="gtest_main" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="All CTest" type="CTestRunConfiguration" factoryName="CTestRun" PROGRAM_PARAMS="--extra-verbose" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" WORKING_DIR="file://$CMakeCurrentLocalGenerationDir$" PASS_PARENT_ENVS_2="true" CONFIG_NAME="Debug" RUN_PATH="$CTestCurrentExecutableName$" EXPLICIT_BUILD_TARGET_NAME="all" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="CMake Application.C_Like_Compiler" />
      <item itemvalue="CMake Application.gmock" />
      <item itemvalue="CMake Application.gmock_main" />
      <item itemvalue="CMake Application.gtest" />
      <item itemvalue="CMake Application.gtest_main" />
      <item itemvalue="CMake Application.Tests" />
      <item itemvalue="CTest Application.All CTest" />
      <item itemvalue="Google Test.Tests" />
      <item itemvalue="Google Test.RegisterManager.TestRegisterManager" />
      <item itemvalue="Google Test.RegisterManagerTest.TestMethod" />
      <item itemvalue="Google Test.RegisterManagerTest.TestMethod2" />
      <item itemvalue="Google Test.TestForAdd.test3" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Google Test.RegisterManagerTest.TestMethod2" />
        <item itemvalue="Google Test.RegisterManagerTest.TestMethod" />
        <item itemvalue="CMake Application.Tests" />
        <item itemvalue="Google Test.RegisterManager.TestRegisterManager" />
        <item itemvalue="Google Test.TestForAdd.test3" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="6611af5e-8e4a-4fac-8698-9ea674dbbf3a" name="Changes" comment="" />
      <created>1707026646385</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1707026646385</updated>
      <workItem from="1707026648000" duration="8323000" />
      <workItem from="1707199223592" duration="28397000" />
      <workItem from="1707273010755" duration="9000" />
      <workItem from="1707294397615" duration="15000" />
      <workItem from="1707294416744" duration="863000" />
      <workItem from="1707295297295" duration="36552000" />
      <workItem from="1707724804164" duration="47024000" />
      <workItem from="1708911744477" duration="4051000" />
      <workItem from="1708949780909" duration="23175000" />
      <workItem from="1709134279859" duration="3235000" />
      <workItem from="1709181786743" duration="51480000" />
      <workItem from="1709353525832" duration="23296000" />
      <workItem from="1709449293351" duration="16501000" />
      <workItem from="1709533359732" duration="25518000" />
      <workItem from="1709602912430" duration="21097000" />
      <workItem from="1709777838956" duration="35125000" />
      <workItem from="1709888559994" duration="9101000" />
    </task>
    <task id="LOCAL-00001" summary="first commit">
      <option name="closed" value="true" />
      <created>1709028376695</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1709028376695</updated>
    </task>
    <task id="LOCAL-00002" summary="first commit">
      <option name="closed" value="true" />
      <created>1709028515062</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1709028515062</updated>
    </task>
    <task id="LOCAL-00003" summary="first commit">
      <option name="closed" value="true" />
      <created>1709602946205</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1709602946205</updated>
    </task>
    <option name="localTasksCounter" value="4" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VCPKGProject">
    <isAutomaticCheckingOnLaunch value="false" />
    <isAutomaticFoundErrors value="true" />
    <isAutomaticReloadCMake value="true" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value="first commit" />
    <option name="LAST_COMMIT_MESSAGE" value="first commit" />
  </component>
  <component name="XDebuggerManager">
    <watches-manager>
      <configuration name="CMakeRunConfiguration">
        <watch expression="a_arg1" />
        <watch expression="a_arg2" />
        <watch expression="input[index]" />
        <watch expression="current_line" />
        <watch expression="ss.str()" />
      </configuration>
    </watches-manager>
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/C_Like_Compiler$Lexer.coverage" NAME="Lexer Coverage Results" MODIFIED="1707198105016" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/C_Like_Compiler$main.coverage" NAME="main Coverage Results" MODIFIED="1707198108062" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
  </component>
</project>